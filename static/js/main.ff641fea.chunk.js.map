{"version":3,"sources":["components/Button.jsx","components/ResetStopwatch.jsx","components/ControleStopwatch.jsx","Stopwatch.jsx","App.jsx","index.js"],"names":["Button","props","className","onClick","disabled","children","ResetStopwatch","setTime","setIsRunning","ControleStopwatch","time","useState","isRunning","useEffect","timer","setTimeout","clearTimeout","classname","Stopwatch","App","minutes","setMinutes","seconds","setSeconds","startTimer","useCallback","min","parseInt","sec","outputMinutes","useMemo","Math","trunc","outputSeconds","type","placeholder","value","onChange","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff641fea.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Button(props) {\n  return (\n    <button\n      className={props.className}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button;","import React from \"react\";\nimport Button from \"./Button\";\nimport \"../index.css\"\n\nfunction ResetStopwatch ({setTime, setIsRunning}) {\n\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTime(0);\n  }\n\n  return (\n    <>\n      <Button\n        className=\"timer__button\"\n        onClick={resetTimer}\n      >\n        Reset\n        </Button>\n    </>\n  )\n}\n\nexport default ResetStopwatch;","import React, {useEffect, useState} from \"react\";\nimport Button from \"./Button\";\nimport \"../index.css\"\nimport ResetStopwatch from \"./ResetStopwatch\";\n\n\nfunction ControleStopwatch({setTime, time}) {\n\n  const [isRunning, setIsRunning] = useState(false);\n\n  const startCount = () => setIsRunning(true)\n  const pauseCount = () => setIsRunning(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (isRunning) {\n        setTime(time + 1);\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [isRunning, time]);\n\n  return (\n    <>\n      <Button\n        classname=\"timer__button\"\n        onClick={startCount}\n        disabled={isRunning}\n      >\n        Start\n      </Button>\n      <Button\n        classname=\"timer__button\"\n        onClick={pauseCount}\n      >\n        Pause\n      </Button>\n      <ResetStopwatch\n        setTime={setTime}\n        setIsRunning={setIsRunning}\n      />\n    </>\n  );\n}\n\nexport default ControleStopwatch;","import React, {useState} from \"react\";\nimport \"./index.css\"\nimport ControleStopwatch from \"./components/ControleStopwatch\";\n\nfunction Stopwatch () {\n\n  const [time, setTime] = useState(0);\n\n  return (\n    <div className=\"stopwatch\">\n      <p className=\"display\"> {time} </p>\n      <ControleStopwatch\n        setTime={setTime}\n        time = {time}\n      />\n    </div>\n  )\n}\n\nexport default Stopwatch;","import React, {useState, useEffect, useMemo, useCallback} from \"react\";\nimport \"./index.css\"\nimport Button from \"./components/Button\";\nimport Stopwatch from \"./Stopwatch\";\n\nfunction App() {\n\n  const [minutes, setMinutes] = useState('');\n  const [seconds, setSeconds] = useState('');\n  const [time, setTime] = useState(0);\n\n  const getSeconds = (e) => {\n    if (\n      e.target.value >= 0 &&\n      e.target.value < 60\n    ) {\n      return setSeconds(e.target.value);\n    }\n  }\n\n  const getMinutes = (e) => {\n    if (e.target.value >= 0) {\n      return setMinutes(e.target.value);\n    }\n  }\n\n  const startTimer = useCallback(() => {\n    if (!minutes && !seconds) {\n      return;\n    }\n    let min = minutes === '' ? 0 : parseInt(minutes);\n    let sec = seconds === '' ? 0 : parseInt(seconds);\n    setTime(min * 60 + sec);\n    setMinutes('');\n    setSeconds('');\n  }, [seconds, minutes]);\n\n  useEffect(() => {\n    let timer;\n    timer = time > 0 && setTimeout(() => setTime(time - 1), 1000);\n    return () => clearTimeout(timer);\n  }, [time]);\n\n  const outputMinutes = useMemo(() => {\n    const min = Math.trunc(time / 60);\n    return min < 10 ? '0' + min : min;\n  }, [time]);\n\n  const outputSeconds = useMemo(() => {\n    const sec = time % 60;\n    return sec < 10 ? '0' + sec : sec;\n  }, [time]);\n\n  const resetTimer = () => {\n    setTime(0);\n    setMinutes('');\n    setSeconds('');\n  }\n\n  return (\n    <div>\n      <div className=\"timer\">\n        <p className=\"display\"> {outputMinutes} : {outputSeconds} </p>\n        <p> Enter the time: </p>\n        <input\n          className=\"timer__input\"\n          type=\"number\"\n          placeholder=\"mm\"\n          value={minutes}\n          onChange={getMinutes}\n        />\n        <input\n          className=\"timer__input\"\n          type=\"number\"\n          placeholder=\"ss\"\n          value={seconds}\n          onChange={getSeconds}\n        />\n        <Button\n          className=\"timer__button\"\n          onClick={startTimer}\n          disabled={time > 0}\n        >\n          Start\n        </Button>\n        <Button\n          className=\"timer__button\"\n          onClick={resetTimer}\n        >\n          Reset\n        </Button>\n      </div>\n      <Stopwatch/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}